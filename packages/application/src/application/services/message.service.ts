import { injectable } from 'inversify'
import { ApplicationStatus, DatacapAllocator } from '@src/domain/application/application'

@injectable()
export class MessageService {
  generatePullRequestMessage(application: DatacapAllocator): string {
    const githubLink = `https://github.com/${application.applicantGithubHandle}`

    const message = `
# Filecoin Plus Allocator Application

## Application Details
| Field | Value |
|-------|-------|
| Applicant | ${application.applicantName} |
| Organization | ${application.applicantOrgName} |
| Address | [${application.applicantAddress}](https://filfox.info/en/address/${encodeURIComponent(application.applicantAddress)}) |
| GitHub Username | [![GitHub](https://img.shields.io/badge/GitHub-${
      application.applicantGithubHandle
    }?style=flat-square&logo=github)](${githubLink}) |

## Grant Details
| Field | Value |
|-------|-------|
| DataCap Amount | ${application.applicationInstructions[application.applicationInstructions.length - 1].datacap_amount} PiB |
| Allocation Method | ${application.applicationInstructions[application.applicationInstructions.length - 1].method} |

---
<sup>This message was automatically generated by the Filecoin Plus Bot. For more information, visit [filecoin.io](https://filecoin.io)</sup>
`

    return message.trim()
  }

  generateCommentMessage(application: DatacapAllocator): string {
    const statusTitle = {
      [ApplicationStatus.KYC_PHASE]: 'KYC Phase',
      [ApplicationStatus.GOVERNANCE_REVIEW_PHASE]: 'Governance Review Phase',
      [ApplicationStatus.RKH_APPROVAL_PHASE]: 'RKH Approval Phase',
      [ApplicationStatus.META_APPROVAL_PHASE]: 'Meta Allocator Approval Phase',
      [ApplicationStatus.DC_ALLOCATED]: 'Approved&Allocated',
      [ApplicationStatus.REJECTED]: 'Rejected',
    }
    
    const statusEmoji = {
      [ApplicationStatus.KYC_PHASE]: 'üîç',
      [ApplicationStatus.GOVERNANCE_REVIEW_PHASE]: 'üë•',
      [ApplicationStatus.RKH_APPROVAL_PHASE]: 'üîë',
      [ApplicationStatus.META_APPROVAL_PHASE]: 'üîë',
      [ApplicationStatus.DC_ALLOCATED]: '‚úÖ',
      [ApplicationStatus.REJECTED]: '‚ùå',
    }

    let message = `
## Application Status: \`${statusTitle[application.applicationStatus]}\` ${statusEmoji[application.applicationStatus] || '‚ùì'}

`

    message += this.getStatusSpecificMessage(application)

    message += `
---
<sup>This message was automatically generated by the Filecoin Plus Bot. For more information, visit [filecoin.io](https://filecoin.io)</sup>
`

    return message
  }

  private getStatusSpecificMessage(application: DatacapAllocator): string {
    switch (application.applicationStatus) {
      case ApplicationStatus.KYC_PHASE:
        return this.getKYCStatusMessage(application)
      case ApplicationStatus.GOVERNANCE_REVIEW_PHASE:
        return this.getGovernanceReviewStatusMessage(application)
      case ApplicationStatus.RKH_APPROVAL_PHASE:
        return this.getRKHApprovalStatusMessage(application)
      case ApplicationStatus.META_APPROVAL_PHASE:
        return this.getMetaApprovalStatusMessage(application)
      case ApplicationStatus.DC_ALLOCATED:
        return this.getApprovedStatusMessage(application)
      case ApplicationStatus.REJECTED:
        return this.getRejectedStatusMessage(application)
      default:
        return `
### Need Assistance?
- For questions about the application process, please contact our support team

üìû We're here to help if you need any assistance
`
    }
  }

  private getKYCStatusMessage(application: DatacapAllocator): string {
    return `
### Next Steps
1. Complete the KYC process at [our secure portal](https://verify.zyphe.com/flow/fil-kyc/kyc/kyc?applicationId=${application.guid})
   - **Name:** ${application.applicantName}
   - **GitHub Username:** ${application.applicantGithubHandle}
2. Your application will be automatically updated once submitted

‚ÑπÔ∏è KYC completion is required to proceed with your application
`
  }

  private getGovernanceReviewStatusMessage(application: DatacapAllocator): string {
    const currentInstruction = application.applicationInstructions[application.applicationInstructions.length - 1];
    return `
### üîç Governance Review Phase
Your application is currently under review by the Fil+ governance team.

### ‚úèÔ∏è Making Changes
If you would like to propose changes to your application, please do so by making comments on this PR tagging @galen-mcandrew.
The governance team will review your comments and make any necessary adjustments.

üí¨ Please be prepared to respond to any questions or requests for clarification.
üîß Governance members: Approve the PR to move the application to the next phase.
`
  }

  private getRKHApprovalStatusMessage(application: DatacapAllocator): string {
    return `
### Approval Pending
- Your application is awaiting final approval from on-chain signers
- We'll update this thread once a decision has been made

‚è≥ The final decision is pending. Thank you for your patience.
`
  }

  private getMetaApprovalStatusMessage(application: DatacapAllocator): string {
    return `
### Approval Pending
- Your application is awaiting final approval from on-chain signers
- We'll update this thread once a decision has been made

‚è≥ The final decision is pending. Thank you for your patience.
`
  }

  private getApprovedStatusMessage(application: DatacapAllocator): string {
    return `
### Action Completed
- Congratulations! Your application has been approved and executed
- You should have received  ${application.applicationInstructions[application.applicationInstructions.length - 1].datacap_amount} PiBs of DataCap on the wallet you specified:  ${application.allocatorMultisigAddress} 
- Please let us know if you have any further questions

üéâ Thank you for being part of the Filecoin Plus community!
`
  }

  private getRejectedStatusMessage(application: DatacapAllocator): string {
    return `
### Application Rejected
- We regret to inform you that your application has been rejected

‚ùå Please contact our support team for more information
`
  }
}
